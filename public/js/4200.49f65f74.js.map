{"version":3,"file":"js/4200.49f65f74.js","mappings":"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","sources":["webpack://iHRIS-v5/../../../src/components/VCheckbox/VCheckbox.ts","webpack://iHRIS-v5/../../../src/components/VSubheader/VSubheader.ts","webpack://iHRIS-v5/../../../src/mixins/rippleable/index.ts","webpack://iHRIS-v5/../../../src/mixins/selectable/index.ts","webpack://iHRIS-v5/./src/site/components/kitso/kitso-scheduled-exam.vue?db04","webpack://iHRIS-v5/src/site/components/kitso/kitso-scheduled-exam.vue","webpack://iHRIS-v5/./src/site/components/kitso/kitso-scheduled-exam.vue?2664","webpack://iHRIS-v5/./src/site/components/kitso/kitso-scheduled-exam.vue"],"sourcesContent":["// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus (e: FocusEvent) {\n      this.isFocused = true\n      this.$emit('focus', e)\n    },\n    onBlur (e: FocusEvent) {\n      this.isFocused = false\n      this.$emit('blur', e)\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"grid-list-xs\":\"\"}},[_c('v-overlay',{attrs:{\"value\":_vm.overlay}},[_c('v-progress-circular',{attrs:{\"color\":\"primary\",\"indeterminate\":\"\",\"size\":\"50\"}}),_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){_vm.overlay = false}}},[_c('v-icon',[_vm._v(\"mdi-close\")])],1)],1),_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"500px\",\"transition\":\"dialog-transition\"},model:{value:(_vm.approveResultsDialog),callback:function ($$v) {_vm.approveResultsDialog=$$v},expression:\"approveResultsDialog\"}},[_c('v-card',[_c('v-toolbar',{staticClass:\"darken-1 white--text text-uppercase font-weight-bold\",attrs:{\"color\":\"primary\",\"dark\":\"\"}},[_vm._v(\" Confirm \"),_c('v-spacer'),_c('v-btn',{attrs:{\"icon\":\"\",\"color\":\"white\"},on:{\"click\":function($event){_vm.approveResultsDialog = false}}},[_c('v-icon',[_vm._v(\"mdi-close\")])],1)],1),_c('v-card-title',[_vm._v(\" Are you sure you want to approve results? \")]),_c('v-card-text',[_c('v-menu',{attrs:{\"close-on-content-click\":false,\"nudge-right\":40,\"transition\":\"scale-transition\",\"offset-y\":\"\",\"min-width\":\"290px\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-text-field',_vm._g({attrs:{\"label\":\"Provide Registration Date*\",\"prepend-icon\":\"mdi-event\",\"readonly\":\"\",\"outlined\":\"\",\"dense\":\"\"},model:{value:(_vm.registrationDateFormatted),callback:function ($$v) {_vm.registrationDateFormatted=$$v},expression:\"registrationDateFormatted\"}},on))]}}]),model:{value:(_vm.registrationDateMenu),callback:function ($$v) {_vm.registrationDateMenu=$$v},expression:\"registrationDateMenu\"}},[_c('v-date-picker',{on:{\"change\":function($event){_vm.registrationDateFormatted = _vm.formatDate(_vm.registrationDate)},\"input\":function($event){_vm.registrationDateMenu = false}},model:{value:(_vm.registrationDate),callback:function ($$v) {_vm.registrationDate=$$v},expression:\"registrationDate\"}})],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"success\",\"disabled\":!_vm.registrationDate},on:{\"click\":_vm.approveResults}},[_c('v-icon',[_vm._v(\"mdi-check\")]),_vm._v(\"Proceed\")],1)],1)],1)],1),_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"1000px\",\"transition\":\"dialog-transition\"},model:{value:(_vm.applicants.dialog),callback:function ($$v) {_vm.$set(_vm.applicants, \"dialog\", $$v)},expression:\"applicants.dialog\"}},[_c('v-card',[_c('v-toolbar',{staticClass:\"darken-1 white--text text-uppercase font-weight-bold\",attrs:{\"color\":\"primary\",\"dark\":\"\"}},[_vm._v(\" Select Applicants To Enroll \"),_c('v-spacer'),_c('v-btn',{attrs:{\"icon\":\"\",\"color\":\"white\"},on:{\"click\":function($event){_vm.applicants.dialog = false}}},[_c('v-icon',[_vm._v(\"mdi-close\")])],1)],1),_c('v-card-title',[_c('v-text-field',{staticClass:\"ma-2\",attrs:{\"label\":\"Omang Number\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"clearable\":\"\"},on:{\"change\":function($event){return _vm.buildTerms('applicants')},\"click:clear\":function($event){return _vm.clearSearch('omang', 'applicants')}},model:{value:(_vm.search.omang),callback:function ($$v) {_vm.$set(_vm.search, \"omang\", $$v)},expression:\"search.omang\"}}),_c('v-text-field',{staticClass:\"ma-2\",attrs:{\"label\":\"Passport Number\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"clearable\":\"\"},on:{\"change\":function($event){return _vm.buildTerms('applicants')},\"click:clear\":function($event){return _vm.clearSearch('passport', 'applicants')}},model:{value:(_vm.search.passport),callback:function ($$v) {_vm.$set(_vm.search, \"passport\", $$v)},expression:\"search.passport\"}})],1),(_vm.applicants.error_message)?_c('v-card-subtitle',{staticClass:\"white--text error\"},[_vm._v(_vm._s(_vm.applicants.error_message))]):_vm._e(),_c('v-card-text',[_vm._v(\" \"+_vm._s(_vm.applicants.selected.length)+\" Selected \"),_c('v-data-table',{staticClass:\"elevation-1\",staticStyle:{\"cursor\":\"pointer\"},attrs:{\"headers\":_vm.applicants.headers,\"items\":_vm.applicants.results,\"item-key\":\"id\",\"options\":_vm.applicants.options,\"server-items-length\":_vm.applicants.total,\"footer-props\":{ 'items-per-page-text':_vm.$t('App.hardcoded-texts.tableText'), 'items-per-page-options': [5,10,20,50] },\"loading\":_vm.applicants.loadingApplicants,\"show-select\":\"\"},on:{\"update:options\":function($event){return _vm.$set(_vm.applicants, \"options\", $event)}},model:{value:(_vm.applicants.selected),callback:function ($$v) {_vm.$set(_vm.applicants, \"selected\", $$v)},expression:\"applicants.selected\"}})],1),_c('v-card-actions',[_c('v-btn',{attrs:{\"color\":\"success\",\"disabled\":_vm.applicants.selected.length === 0},on:{\"click\":_vm.enroll}},[_vm._v(\"Enroll Selected\")])],1)],1)],1),_c('v-card',{staticClass:\"mx-auto\",attrs:{\"max-width\":\"900\",\"outlined\":\"\"}},[_c('v-card-title',{staticClass:\"primary darken-1 white--text text-uppercase font-weight-bold\"},[_vm._v(\" KITSO Scheduled Exam \")]),_c('v-card-text',{staticClass:\"my-3\"},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"4\"}},[_c('v-btn',{attrs:{\"disabled\":!_vm.canEnroll,\"color\":\"secondary\",\"dark\":\"\",\"small\":\"\"},on:{\"click\":function($event){return _vm.getApplicants(true, 'waitingexam')}}},[_c('v-icon',{attrs:{\"light\":\"\",\"left\":\"\"}},[_vm._v(\"mdi-playlist-check\")]),_c('span',[_vm._v(\"Enroll Candidates\")])],1),_c('br'),_c('br'),_c('v-btn',{attrs:{\"disabled\":!_vm.canApproveResults,\"color\":\"success\",\"dark\":\"\",\"small\":\"\"},on:{\"click\":function($event){_vm.approveResultsDialog = true}}},[_c('v-icon',{attrs:{\"light\":\"\",\"left\":\"\"}},[_vm._v(\"mdi-check\")]),_c('span',[_vm._v(\"Approve Resultss\")])],1)],1),_c('v-divider',{attrs:{\"vertical\":\"\"}}),_c('v-col',{attrs:{\"cols\":\"8\"}},[_c('v-row',{staticClass:\"justify-space-between\"},[_c('v-col',{attrs:{\"cols\":\"4\"}},[_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\"Name:\")])]),_c('v-col',{attrs:{\"cols\":\"8\"}},[_c('v-chip',{key:_vm.ind,staticClass:\"ma-2\"},[_vm._v(\" \"+_vm._s(_vm.exam.name)+\" \")])],1)],1),_c('v-divider'),_c('v-row',{staticClass:\"justify-space-between\"},[_c('v-col',{attrs:{\"cols\":\"4\"}},[_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\"Course:\")])]),_c('v-col',{attrs:{\"cols\":\"8\"}},[_c('v-chip',{key:_vm.ind,staticClass:\"ma-2\"},[_vm._v(\" \"+_vm._s(_vm.exam.course)+\" \")])],1)],1),_c('v-divider'),_c('v-row',{staticClass:\"justify-space-between\"},[_c('v-col',{attrs:{\"cols\":\"4\"}},[_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\"Start Date:\")])]),_c('v-col',{attrs:{\"cols\":\"8\"}},[_vm._v(_vm._s(_vm.exam.startdate))])],1),_c('v-divider'),_c('v-row',{staticClass:\"justify-space-between\"},[_c('v-col',{attrs:{\"cols\":\"4\"}},[_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\"End Date:\")])]),_c('v-col',{attrs:{\"cols\":\"8\"}},[_vm._v(_vm._s(_vm.exam.enddate))])],1),_c('v-divider'),_c('v-row',{staticClass:\"justify-space-between\"},[_c('v-col',{attrs:{\"cols\":\"4\"}},[_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\"Status:\")])]),_c('v-col',{attrs:{\"cols\":\"8\"}},[_vm._v(_vm._s(_vm.exam.status.display))])],1)],1)],1)],1)],1),_c('br'),_c('v-card',[_c('v-card-title',[_vm._v(\" Enrolled Applicants \"),_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"error\",\"small\":\"\",\"disabled\":_vm.applicants.selected.length === 0 || !_vm.hasTask('exam.exam-scheduling')},on:{\"click\":_vm.unenroll}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-close-outline\")]),_vm._v(\"Un Enroll Selected \")],1),_c('v-spacer'),(!_vm.resultsMode && _vm.hasTask('nmcb-practitioner-exam-profile'))?_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":_vm.activateAddResults}},[(_vm.exam && _vm.exam.status && _vm.exam.status.code === 'approved')?[_vm._v(\" View Results \")]:[_vm._v(\" Add Results \")]],2):(_vm.hasTask('nmcb-practitioner-exam-profile'))?[_c('v-btn',{attrs:{\"color\":\"success\",\"disabled\":_vm.exam && _vm.exam.status && _vm.exam.status.code === 'approved'},on:{\"click\":_vm.saveResults}},[_vm._v(\"Save Results\")]),_vm._v(\"     \"),_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":_vm.deactivateAddResults}},[_vm._v(\"Hide Results\")])]:_vm._e()],2),_c('v-card-title',[_c('v-text-field',{staticClass:\"ma-2\",attrs:{\"label\":\"Omang Number\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"clearable\":\"\"},on:{\"change\":function($event){return _vm.buildTerms('enrolled')},\"click:clear\":function($event){return _vm.clearSearch('omang', 'enrolled')}},model:{value:(_vm.search.omang),callback:function ($$v) {_vm.$set(_vm.search, \"omang\", $$v)},expression:\"search.omang\"}}),_c('v-text-field',{staticClass:\"ma-2\",attrs:{\"label\":\"Passport Number\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"clearable\":\"\"},on:{\"change\":function($event){return _vm.buildTerms('enrolled')},\"click:clear\":function($event){return _vm.clearSearch('passport', 'enrolled')}},model:{value:(_vm.search.passport),callback:function ($$v) {_vm.$set(_vm.search, \"passport\", $$v)},expression:\"search.passport\"}})],1),(_vm.enrolled.error_message)?_c('v-card-subtitle',{staticClass:\"white--text error\"},[_vm._v(_vm._s(_vm.enrolled.error_message))]):_vm._e(),_c('v-card-text',[_c('v-data-table',{staticClass:\"elevation-1\",staticStyle:{\"cursor\":\"pointer\"},attrs:{\"headers\":_vm.enrolled.headers,\"items\":_vm.enrolled.results,\"item-key\":\"id\",\"options\":_vm.enrolled.options,\"server-items-length\":_vm.enrolled.total,\"footer-props\":{ 'items-per-page-text':_vm.$t('App.hardcoded-texts.tableText'), 'items-per-page-options': [5,10,20,50] },\"loading\":_vm.enrolled.loadingEnrolled,\"show-select\":\"\"},on:{\"update:options\":function($event){return _vm.$set(_vm.enrolled, \"options\", $event)}},scopedSlots:_vm._u([{key:\"item\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('tr',{on:{\"click\":function($event){return _vm.clickIt(item)}}},[_c('td',[_c('v-checkbox',{attrs:{\"color\":\"red\",\"value\":item,\"hide-details\":\"\"},on:{\"click\":function($event){$event.stopPropagation();}},model:{value:(_vm.applicants.selected),callback:function ($$v) {_vm.$set(_vm.applicants, \"selected\", $$v)},expression:\"applicants.selected\"}})],1),_c('td',[_vm._v(_vm._s(item.surname))]),_c('td',[_vm._v(_vm._s(item.given))]),_c('td',[_vm._v(_vm._s(item.birthDate))]),_c('td',[_vm._v(_vm._s(item.gender))]),_c('td',[_vm._v(_vm._s(item.omang[0]))]),_c('td',[_vm._v(_vm._s(item.passport[0]))]),_c('td',[_vm._v(_vm._s(item.cadreCategory))]),_c('td',[_vm._v(_vm._s(item.location))]),(_vm.resultsMode)?[_vm._l((_vm.exam.assessments),function(assessment){return _c('td',{key:item.id+assessment.code},[_c('v-text-field',{attrs:{\"readonly\":_vm.exam && _vm.exam.status && _vm.exam.status.code === 'approved',\"error-messages\":_vm.examResults[item.examId][assessment.code].errors,\"outlined\":\"\",\"hide-details\":\"auto\",\"dense\":\"\"},on:{\"click\":function($event){$event.stopPropagation();},\"input\":function($event){return _vm.validateScore(item.examId)}},model:{value:(_vm.examResults[item.examId][assessment.code].score),callback:function ($$v) {_vm.$set(_vm.examResults[item.examId][assessment.code], \"score\", $$v)},expression:\"examResults[item.examId][assessment.code].score\"}})],1)}),_c('td',[(_vm.examResults[item.examId]['exam-assessment'] === 'Pass')?_c('v-chip',{attrs:{\"dark\":\"\",\"color\":\"green\"}},[_vm._v(\" \"+_vm._s(_vm.examResults[item.examId][\"exam-assessment\"])+\" \")]):_vm._e(),(_vm.examResults[item.examId]['exam-assessment'] === 'Fail')?_c('v-chip',{attrs:{\"dark\":\"\",\"color\":\"red\"}},[_vm._v(\" \"+_vm._s(_vm.examResults[item.examId][\"exam-assessment\"])+\" \")]):_vm._e()],1)]:_vm._e()],2)]}}]),model:{value:(_vm.applicants.selected),callback:function ($$v) {_vm.$set(_vm.applicants, \"selected\", $$v)},expression:\"applicants.selected\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container grid-list-xs>\n    <v-overlay :value=\"overlay\">\n      <v-progress-circular\n          color=\"primary\"\n          indeterminate\n          size=\"50\"\n      ></v-progress-circular>\n      <v-btn icon @click=\"overlay = false\">\n        <v-icon>mdi-close</v-icon>\n      </v-btn>\n    </v-overlay>\n    <v-dialog\n      v-model=\"approveResultsDialog\"\n      persistent\n      max-width=\"500px\"\n      transition=\"dialog-transition\"\n    >\n      <v-card>\n        <v-toolbar color=\"primary\" class=\"darken-1 white--text text-uppercase font-weight-bold\" dark>\n          Confirm\n          <v-spacer></v-spacer>\n          <v-btn icon color=\"white\" @click=\"approveResultsDialog = false\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-title>\n          Are you sure you want to approve results?\n        </v-card-title>\n        <v-card-text>\n          <v-menu\n            v-model=\"registrationDateMenu\"\n            :close-on-content-click=\"false\"\n            :nudge-right=\"40\"\n            transition=\"scale-transition\"\n            offset-y\n            min-width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on }\">\n              <v-text-field\n                v-model=\"registrationDateFormatted\"\n                label=\"Provide Registration Date*\"\n                prepend-icon=\"mdi-event\"\n                readonly\n                v-on=\"on\"\n                outlined\n                dense\n              />\n            </template>\n            <v-date-picker\n              v-model=\"registrationDate\"\n              @change=\"registrationDateFormatted = formatDate(registrationDate)\"\n              @input=\"registrationDateMenu = false\"\n            />\n          </v-menu>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"success\" :disabled=\"!registrationDate\" @click=\"approveResults\"><v-icon>mdi-check</v-icon>Proceed</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      v-model=\"applicants.dialog\"\n      persistent\n      max-width=\"1000px\"\n      transition=\"dialog-transition\"\n    >\n      <v-card>\n        <v-toolbar color=\"primary\" class=\"darken-1 white--text text-uppercase font-weight-bold\" dark>\n          Select Applicants To Enroll\n          <v-spacer></v-spacer>\n          <v-btn icon color=\"white\" @click=\"applicants.dialog = false\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-title>\n          <v-text-field label=\"Omang Number\" class=\"ma-2\" v-model=\"search.omang\" dense outlined hide-details clearable @change=\"buildTerms('applicants')\" @click:clear=\"clearSearch('omang', 'applicants')\" />\n          <v-text-field label=\"Passport Number\" class=\"ma-2\" v-model=\"search.passport\" dense outlined hide-details clearable @change=\"buildTerms('applicants')\" @click:clear=\"clearSearch('passport', 'applicants')\" />\n        </v-card-title>\n        <v-card-subtitle\n          v-if=\"applicants.error_message\"\n          class=\"white--text error\"\n        >{{ applicants.error_message }}</v-card-subtitle>\n        <v-card-text>\n          {{ applicants.selected.length }} Selected\n          <v-data-table\n            v-model=\"applicants.selected\"\n            style=\"cursor: pointer\"\n            :headers=\"applicants.headers\"\n            :items=\"applicants.results\"\n            item-key=\"id\"\n            :options.sync=\"applicants.options\"\n            :server-items-length=\"applicants.total\"\n            :footer-props=\"{ 'items-per-page-text':$t('App.hardcoded-texts.tableText'), 'items-per-page-options': [5,10,20,50] }\"\n            :loading=\"applicants.loadingApplicants\"\n            class=\"elevation-1\"\n            show-select\n          >\n          </v-data-table>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"success\" :disabled=\"applicants.selected.length === 0\" @click=\"enroll\">Enroll Selected</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-card \n      class=\"mx-auto\"\n      max-width=\"900\"\n      outlined\n      >\n      <v-card-title class=\"primary darken-1 white--text text-uppercase font-weight-bold\">\n        KITSO Scheduled Exam\n      </v-card-title>\n      <v-card-text class=\"my-3\">\n        <v-row>\n          <v-col cols=\"4\">\n            <v-btn :disabled=\"!canEnroll\" color=\"secondary\" dark small @click=\"getApplicants(true, 'waitingexam')\">\n              <v-icon light left>mdi-playlist-check</v-icon>\n              <span>Enroll Candidates</span>\n            </v-btn>\n            <br>\n            <br>\n            <v-btn :disabled=\"!canApproveResults\" color=\"success\" dark small @click=\"approveResultsDialog = true\">\n              <v-icon light left>mdi-check</v-icon>\n              <span>Approve Resultss</span>\n            </v-btn>\n          </v-col>\n          <v-divider vertical></v-divider>\n          <v-col cols=\"8\">\n            <v-row class=\"justify-space-between\">\n              <v-col cols=\"4\">\n                <span class=\"font-weight-bold\">Name:</span>\n              </v-col>\n              <v-col cols=\"8\">\n                <v-chip\n                  class=\"ma-2\"\n                  :key=\"ind\"\n                >\n                  {{ exam.name }}\n                </v-chip>\n              </v-col>\n            </v-row>\n            <v-divider/>\n            <v-row class=\"justify-space-between\">\n              <v-col cols=\"4\">\n                <span class=\"font-weight-bold\">Course:</span>\n              </v-col>\n              <v-col cols=\"8\">\n                <v-chip\n                  class=\"ma-2\"\n                  :key=\"ind\"\n                >\n                  {{ exam.course }}\n                </v-chip>\n              </v-col>\n            </v-row>\n            <v-divider/>\n            <v-row class=\"justify-space-between\">\n              <v-col cols=\"4\">\n                <span class=\"font-weight-bold\">Start Date:</span>\n              </v-col>\n              <v-col cols=\"8\">{{ exam.startdate }}</v-col>\n            </v-row>\n            <v-divider/>\n            <v-row class=\"justify-space-between\">\n              <v-col cols=\"4\">\n                <span class=\"font-weight-bold\">End Date:</span>\n              </v-col>\n              <v-col cols=\"8\">{{ exam.enddate }}</v-col>\n            </v-row>\n            <v-divider/>\n            <v-row class=\"justify-space-between\">\n              <v-col cols=\"4\">\n                <span class=\"font-weight-bold\">Status:</span>\n              </v-col>\n              <v-col cols=\"8\">{{ exam.status.display }}</v-col>\n            </v-row>\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n    <br>\n    <v-card>\n      <v-card-title>\n        Enrolled Applicants\n        <v-spacer></v-spacer>\n        <v-btn\n          color=\"error\"\n          small\n          :disabled=\"applicants.selected.length === 0 || !hasTask('exam.exam-scheduling')\"\n          @click=\"unenroll\"\n        >\n          <v-icon left>mdi-close-outline</v-icon>Un Enroll Selected\n        </v-btn>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" v-if=\"!resultsMode && hasTask('nmcb-practitioner-exam-profile')\" @click=\"activateAddResults\">\n          <template v-if=\"exam && exam.status && exam.status.code === 'approved'\">\n            View Results\n          </template>\n          <template v-else>\n            Add Results\n          </template>\n        </v-btn>\n        <template v-else-if=\"hasTask('nmcb-practitioner-exam-profile')\">\n          <v-btn color=\"success\" :disabled=\"exam && exam.status && exam.status.code === 'approved'\" @click=\"saveResults\">Save Results</v-btn>\n          &nbsp;&nbsp;&nbsp;\n          <v-btn color=\"primary\" @click=\"deactivateAddResults\">Hide Results</v-btn>\n        </template>\n      </v-card-title>\n      <v-card-title>\n        <v-text-field label=\"Omang Number\" class=\"ma-2\" v-model=\"search.omang\" dense outlined hide-details clearable @change=\"buildTerms('enrolled')\" @click:clear=\"clearSearch('omang', 'enrolled')\" />\n        <v-text-field label=\"Passport Number\" class=\"ma-2\" v-model=\"search.passport\" dense outlined hide-details clearable @change=\"buildTerms('enrolled')\" @click:clear=\"clearSearch('passport', 'enrolled')\" />\n      </v-card-title>\n      <v-card-subtitle\n        v-if=\"enrolled.error_message\"\n        class=\"white--text error\"\n      >{{ enrolled.error_message }}</v-card-subtitle>\n      <v-card-text>\n        <v-data-table\n          style=\"cursor: pointer\"\n          :headers=\"enrolled.headers\"\n          :items=\"enrolled.results\"\n          item-key=\"id\"\n          :options.sync=\"enrolled.options\"\n          :server-items-length=\"enrolled.total\"\n          :footer-props=\"{ 'items-per-page-text':$t('App.hardcoded-texts.tableText'), 'items-per-page-options': [5,10,20,50] }\"\n          :loading=\"enrolled.loadingEnrolled\"\n          class=\"elevation-1\"\n          show-select\n          v-model=\"applicants.selected\"\n        >\n          <template v-slot:item=\"{ item }\">\n            <tr @click=\"clickIt(item)\">\n              <td>\n                <v-checkbox\n                  @click.stop\n                  v-model=\"applicants.selected\"\n                  color=\"red\"\n                  :value=\"item\"\n                  hide-details\n                ></v-checkbox>\n              </td>\n              <td>{{ item.surname }}</td>\n              <td>{{ item.given }}</td>\n              <td>{{ item.birthDate }}</td>\n              <td>{{ item.gender }}</td>\n              <td>{{ item.omang[0] }}</td>\n              <td>{{ item.passport[0] }}</td>\n              <td>{{ item.cadreCategory }}</td>\n              <td>{{ item.location }}</td>\n              <template v-if=\"resultsMode\">\n                <td v-for=\"assessment in exam.assessments\" :key=\"item.id+assessment.code\">\n                  <v-text-field\n                    @click.stop\n                    :readonly=\"exam && exam.status && exam.status.code === 'approved'\"\n                    :error-messages=\"examResults[item.examId][assessment.code].errors\"\n                    v-model=\"examResults[item.examId][assessment.code].score\"\n                    outlined\n                    hide-details=\"auto\"\n                    dense\n                    @input=\"validateScore(item.examId)\"\n                  />\n                </td>\n                <td>\n                  <v-chip dark color=\"green\" v-if=\"examResults[item.examId]['exam-assessment'] === 'Pass'\">\n                    {{ examResults[item.examId][\"exam-assessment\"] }}\n                  </v-chip>\n                  <v-chip dark color=\"red\" v-if=\"examResults[item.examId]['exam-assessment'] === 'Fail'\">\n                    {{ examResults[item.examId][\"exam-assessment\"] }}\n                  </v-chip>\n                </td>\n              </template>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n<script>\nexport default {\n  props: [\"queries\"],\n  data() {\n    return {\n      overlay: false,\n      resultsMode: false,\n      approveResultsDialog: false,\n      registrationDate: \"\",\n      registrationDateFormatted: \"\",\n      registrationDateMenu: false,\n      exam: {\n        status: {},\n        course: {}\n      },\n      examResults: {},\n      search: {\n        name: '',\n        omang: '',\n        passport: ''\n      },\n      enrolled: {\n        options: { itemsPerPage: 5 },\n        total: 0,\n        prevPage: -1,\n        link: [],\n        terms: {},\n        results: [],\n        headers: [{\n          text: \"Surname\",\n          value: \"surname\"\n        }, {\n          text: \"Given Name(s)\",\n          value: \"given\"\n        }, {\n          text: \"Birth Date\",\n          value: \"birthDate\"\n        }, {\n          text: \"Gender\",\n          value: \"gender\"\n        }, {\n          text: \"OMANG\",\n          value: \"omang\"\n        }, {\n          text: \"Passport\",\n          value: \"passport\"\n        }, {\n          text: \"Cadre Category\",\n          value: \"cadreCategory\"\n        }, {\n          text: \"Training Location\",\n          value: \"location\"\n        }],\n        loadingEnrolled: false,\n        update_again: { rerun: false, restart: false },\n        error_message: null,\n      },\n      applicants: {\n        selected: [],\n        dialog: false,\n        options: { itemsPerPage: 2 },\n        total: 0,\n        prevPage: -1,\n        link: [],\n        terms: {},\n        results: [],\n        headers: [{\n          text: \"Surname\",\n          value: \"surname\"\n        }, {\n          text: \"Given Name(s)\",\n          value: \"given\"\n        }, {\n          text: \"Birth Date\",\n          value: \"birthDate\"\n        }, {\n          text: \"Gender\",\n          value: \"gender\"\n        }, {\n          text: \"OMANG\",\n          value: \"omang\"\n        }, {\n          text: \"Passport\",\n          value: \"passport\"\n        }, {\n          text: \"Cadre Category\",\n          value: \"cadreCategory\"\n        }, {\n          text: \"Training Location\",\n          value: \"location\"\n        }, {\n          text: \"Attempts\",\n          value: \"attempt\"\n        }],\n        loadingApplicants: false,\n        update_again: { rerun: false, restart: false },\n        error_message: null,\n      },\n      applicantStatus: ''\n    }\n  },\n  watch: {\n    'applicants.options': {\n      handler() {\n        this.getApplicants();\n      },\n      deep: true\n    },\n    'enrolled.options': {\n      handler() {\n        this.getEnrolled();\n      },\n      deep: true\n    }\n  },\n  computed: {\n    canEnroll() {\n      if(!this.hasTask('kitso-exam-scheduling')) {\n        return false\n      }\n      if(this.$moment(this.exam.enddate).isBefore(this.$moment().format(\"YYYY-MM-DD\"))) {\n        return false\n      }\n      return true\n    },\n    canApproveResults() {\n      if(!this.hasTask('kitso-exam-approval')) {\n        return false\n      }\n      if(this.exam && this.exam.status && this.exam.status.code === 'approved') {\n        return false\n      }\n      return true\n    }\n  },\n  methods: {\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split(\"-\");\n      return `${day}-${month}-${year}`;\n    },\n    selectAll() {\n      this.applicants.selected = this.applicants.selected.concat(this.applicants.results)\n    },\n    unselectDisabled(item) {\n      if(item.disabled) {\n        let index = this.applicants.selected.findIndex((selelected) => {\n          return selelected.id === item.id\n        })\n        if(index > -1) {\n          this.applicants.selected.splice(index, 1)\n        }\n      }\n    },\n    approveResults() {\n      if(!this.hasTask('nmcb-practitioner-exam-profile')) {\n        return\n      }\n      this.approveResultsDialog = false\n      this.overlay = true\n      let opts = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/fhir+json\"\n        },\n        redirect: 'manual',\n        body: JSON.stringify({\n          exam: this.queries.exam,\n          registrationDate: this.registrationDate\n        })\n      }\n      fetch(\"/site/nmcb/approveResults\", opts).then((response) => {\n        this.overlay = false;\n        if(response.status === 200) {\n          this.$store.commit(\"setMessage\", {\n            type: \"success\",\n            text: \"Results approved successfully\",\n          });\n          this.getExam()\n          this.getEnrolled()\n        } else {\n          this.$store.commit(\"setMessage\", {\n            type: \"error\",\n            text: \"Failed to generate registrations for some few applicants, try again.\"\n          });\n        }\n      }).catch(() => {\n        this.overlay = false;\n        this.$store.commit(\"setMessage\", {\n          type: \"error\",\n          text: \"Failed to generate registrations for some few applicants, try again.\"\n        });\n      })\n    },\n    clickIt: function(record) {\n      this.$router.push({\n        path: \"/custom/nmcb-registration-application?id=\" + record.application + \"&practitioner=\" + record.id + \"&path=/components/nmcb/\"\n      })\n    },\n    validateScore(id) {\n      let total = 0\n      let errors = false\n      let complete = true\n      for(let assessment of this.exam.assessments) {\n        this.examResults[id][assessment.code].errors = []\n        let score = this.examResults[id][assessment.code].score\n        if(score && score.toString().split(\".\").length > 1 && !score.toString().split(\".\")[1]) {\n          this.examResults[id][assessment.code].errors = [\"Incomplete number\"]\n          errors = true\n        }\n        if(isNaN(score)) {\n          this.examResults[id][assessment.code].errors = [\"Must be a number\"]\n          errors = true\n          break\n        }\n        if(score) {\n          total += parseFloat(score)\n        } else {\n          complete = false\n        }\n        if(total > 100) {\n          this.examResults[id][assessment.code].errors = [\"Total Exceeds 100\"]\n          errors = true\n        }\n      }\n      if(errors || !complete) {\n        this.examResults[id][\"exam-assessment\"] = \"\"\n      } else if(this.exam.passmark > total) {\n        this.examResults[id][\"exam-assessment\"] = \"Fail\"\n      } else if(this.exam.passmark <= total) {\n        this.examResults[id][\"exam-assessment\"] = \"Pass\"\n      }\n    },\n    activateAddResults() {\n      this.resultsMode = true\n      for(let assessment of this.exam.assessments) {\n        this.enrolled.headers.push({\n          text: assessment.display,\n          value: assessment.code\n        })\n      }\n      this.enrolled.headers.push({\n        text: \"Assessment\",\n        value: \"exam-assessment\"\n      })\n    },\n    deactivateAddResults() {\n      this.resultsMode = false\n      for(let assessment of this.exam.assessments) {\n        let index = this.enrolled.headers.findIndex((header) => {\n          return header.value === assessment.code\n        })\n        this.enrolled.headers.splice(index, 1)\n      }\n      let index = this.enrolled.headers.findIndex((header) => {\n        return header.value === 'exam-assessment'\n      })\n      this.enrolled.headers.splice(index, 1)\n    },\n    saveResults() {\n      if(!this.hasTask('nmcb-practitioner-exam-profile')) {\n        return\n      }\n      this.overlay = true\n      let opts = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/fhir+json\"\n        },\n        redirect: 'manual',\n        body: JSON.stringify(this.examResults)\n      }\n      fetch(\"/site/nmcb/saveResults\", opts).then((response) => {\n        this.overlay = false;\n        if(response.status === 200) {\n          this.$store.commit(\"setMessage\", {\n            type: \"success\",\n            text: \"Results saved successfully\",\n          });\n        } else {\n          this.$store.commit(\"setMessage\", {\n            type: \"error\",\n            text: \"Failed to save results.\"\n          });\n        }\n      }).catch(() => {\n        this.overlay = false;\n        this.$store.commit(\"setMessage\", {\n          type: \"error\",\n          text: \"Failed to save results.\"\n        });\n      })\n    },\n    enroll() {\n      this.applicants.dialog = false\n      this.overlay = true;\n      let bundle = {\n        resourceType: \"Bundle\",\n        type: \"transaction\",\n        entry: []\n      }\n      for(let applicant of this.applicants.selected) {\n        let resource = {\n          resourceType: \"Basic\",\n          meta: {\n            profile: [\"http://ihris.org/fhir/StructureDefinition/nmcb-practitioner-exam-profile\"]\n          },\n          extension: [{\n            url: \"http://ihris.org/fhir/StructureDefinition/exam-attempt\",\n            valueInteger: applicant.attempt + 1\n          }, {\n            url: \"http://ihris.org/fhir/StructureDefinition/ihris-practitioner-reference\",\n            valueReference: {\n              reference: \"Practitioner/\" + applicant.id\n            }\n          }, {\n            url: \"http://ihris.org/fhir/StructureDefinition/nmcb-registration-application-reference\",\n            valueReference: {\n              reference: \"Basic/\" + applicant.application\n            }\n          }, {\n            url: \"http://ihris.org/fhir/StructureDefinition/nmcb-exam-scheduling-reference\",\n            valueReference: {\n              reference: \"Basic/\" + this.queries.exam\n            }\n          }]\n        }\n        bundle.entry.push({\n          resource,\n          request: {\n            method: \"POST\",\n            url: \"Basic\"\n          }\n        })\n      }\n      let opts = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/fhir+json\"\n        },\n        redirect: 'manual',\n        body: JSON.stringify(bundle)\n      }\n      fetch(\"/site/nmcb/enrollApplicants\", opts).then((response) => {\n        this.applicants.selected = []\n        this.overlay = false;\n        if(response.status === 201 || response.status === 200) {\n          this.getEnrolled()\n          this.$store.commit(\"setMessage\", {\n            type: \"success\",\n            text: \"Applicants Enrolled Successfully\",\n          });\n        } else {\n          this.$store.commit(\"setMessage\", {\n            type: \"error\",\n            text: \"Failed to enroll applicants.\"\n          });\n        }\n      }).catch(() => {\n        this.applicants.selected = []\n        this.overlay = false;\n        this.$store.commit(\"setMessage\", {\n          type: \"error\",\n          text: \"Failed to enroll applicants.\"\n        });\n      })\n    },\n    unenroll() {\n      this.overlay = true;\n      let opts = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/fhir+json\"\n        },\n        redirect: 'manual',\n        body: JSON.stringify({\n          applicants: this.applicants.selected,\n          exam: this.queries.exam\n        })\n      }\n      fetch(\"/site/nmcb/unenrollApplicants\", opts).then((response) => {\n        this.overlay = false;\n        this.applicants.selected = []\n        if(response.status === 201 || response.status === 200) {\n          this.getEnrolled()\n          this.$store.commit(\"setMessage\", {\n            type: \"success\",\n            text: \"Applicants Un Enrolled Successfully\",\n          });\n        } else {\n          this.$store.commit(\"setMessage\", {\n            type: \"error\",\n            text: \"Failed to un enroll applicants.\"\n          });\n        }\n      }).catch(() => {\n        this.applicants.selected = []\n        this.overlay = false;\n        this.$store.commit(\"setMessage\", {\n          type: \"error\",\n          text: \"Failed to un enroll applicants.\"\n        });\n      })\n    },\n    getExam() {\n      fetch(\"/fhir/Basic/\" + this.queries.exam).then((response) => {\n        response.json().then(async(exam) => {\n          this.exam.name = exam.extension.find((ext) => {\n            return ext.url === 'http://ihris.org/fhir/StructureDefinition/ihris-basic-name'\n          }).valueString\n          this.exam.startdate = exam.extension.find((ext) => {\n            return ext.url === 'http://ihris.org/fhir/StructureDefinition/start-date'\n          }).valueDate\n          this.exam.enddate = exam.extension.find((ext) => {\n            return ext.url === 'http://ihris.org/fhir/StructureDefinition/end-date'\n          }).valueDate\n          let course = exam.extension.find((ext) => {\n            return ext.url === 'http://ihris.org/fhir/StructureDefinition/ihris-training-course'\n          })?.valueReference\n          await fetch(\"/fhir/Basic/\" + course.split(\"/\")[1]).then((response) => {\n            response.json().then((response) => {\n              this.exam.course.name = response.extension.find((ext) => {\n                return ext.url === 'http://ihris.org/fhir/StructureDefinition/ihris-basic-name'\n              }).valueString\n              this.exam.course.passmark = response.extension.find((ext) => {\n                return ext.url === 'http://ihris.org/fhir/StructureDefinition/training-course-pass-mark'\n              }).valueDecimal\n            })\n          })\n          let status = exam.extension.find((ext) => {\n            return ext.url === 'http://ihris.org/fhir/StructureDefinition/nmcb-examresults-status'\n          })\n          if(status) {\n            this.exam.status = status.valueCoding\n          }\n        })\n      })\n    },\n    clearSearch: function(field, category) {\n      this.search[field] = \"\"\n      this[category].terms.practitioner = ''\n      this.buildTerms(category)\n    },\n    checkRerunApplicants() {\n      if ( !this.applicants.loadingApplicants && this.applicants.update_again.rerun ) {\n        this.getApplicants( this.applicants.update_again.restart )\n        this.applicants.update_again = { rerun: false, restart: false }\n      }\n    },\n    checkRerunEnrolled() {\n      if ( !this.enrolled.loadingEnrolled && this.enrolled.update_again.rerun ) {\n        this.getEnrolled( this.enrolled.update_again.restart )\n        this.enrolled.update_again = { rerun: false, restart: false }\n      }\n    },\n    async buildTerms(category) {\n      if(category === \"applicants\") {\n        this.applicants.terms = {}\n        await this.getDataPractitioner(category)\n        this.getApplicants(true);\n      } else if(category === \"enrolled\") {\n        this.enrolled.terms = {}\n        await this.getDataPractitioner(category)\n        this.getEnrolled(true);\n      }\n    },\n    getDataPractitioner(category) {\n      return new Promise((resolve, reject) => {\n        let identifier = \"\"\n        if(this.search.omang) {\n          identifier = \"?identifier=\" + this.search.omang\n        }\n        if(this.search.passport) {\n          if(identifier) {\n            identifier += \"&identifier=\" + this.search.passport\n          } else {\n            identifier = \"?identifier=\" + this.search.passport\n          }\n        }\n        if(!identifier) {\n          return resolve()\n        }\n        let url = \"/fhir/Practitioner\" + identifier\n        fetch(url).then(response => {\n          response.json().then(async (data) => {\n            let practitioners = []\n            if(data.entry && data.entry.length > 0) {\n              for (let entry of data.entry) {\n                practitioners.push(\"Practitioner/\" + entry.resource.id)\n              }\n            }\n            if(practitioners.length > 0) {\n              this[category].terms[\"practitioner\"] = practitioners.join(\",\")\n            } else {\n              this[category].terms[\"practitioner\"] = \"Practitioner/fakeprct\"\n            }\n            resolve()\n          }).catch(() => {\n            reject()\n          })\n        }).catch(() => {\n          reject()\n        })\n      })\n    },\n    getApplicants(restart, status) {\n      if(status) {\n        this.applicantStatus = status\n      }\n      if(!this.applicants.dialog) {\n        this.applicants.selected = []\n      }\n      this.applicants.dialog = true\n      if ( this.applicants.loadingApplicants ) {\n        this.applicants.update_again.rerun = true\n        this.applicants.update_again.restart = this.applicants.update_again.restart || restart\n        return\n      }\n      this.applicants.loadingApplicants = true;\n      this.applicants.error_message = null;\n      let cadres = \"\"\n      for(let cadre of this.exam.cadres) {\n        if(!cadres) {\n          cadres = cadre.code\n        } else {\n          cadres += \",\" + cadre.code\n        }\n      }\n      let url = \"\";\n      if (restart) this.applicants.options.page = 1;\n      if (this.applicants.options.page > 1) {\n        if (this.applicants.options.page === this.applicants.prevPage - 1) {\n          url = this.applicants.link.find(link => link.relation === \"previous\").url;\n        } else if (this.applicants.options.page === this.applicants.prevPage + 1) {\n          url = this.applicants.link.find(link => link.relation === \"next\").url;\n        }\n        // Should make this smarter to keep the _getpages parameter,\n        // but the issue is with tracking permissions on the resource\n        url = url.replace(/_getpages=[^&]*&*/, \"\").replace(\"/fhir?\",\"/fhir/Basic?\")\n        url = url.substring(url.indexOf(\"/fhir/\"));\n\n        \n        if(url.indexOf('_sort=-_lastUpdated') === -1) {\n          url = url + '&_sort=-_lastUpdated'\n        }\n        if(url.indexOf('_total=accurate') === -1) {\n          url = url + '&_total=accurate'\n        }\n      }\n      if (url === \"\") {\n        let count = this.applicants.options.itemsPerPage;\n        let sort = \"\";\n        for (let idx in this.applicants.options.sortBy) {\n          if (sort) {\n            sort += \",\";\n          }\n          if (this.applicants.options.sortDesc[idx]) {\n            sort += \"-\";\n          }\n          sort += this.applicants.options.sortBy[idx];\n        }\n        url = \"/fhir/Practitioner?&_count=\" + count + \"&_sort=-_lastUpdated&_total=accurate\"\n      }\n      let sTerms = Object.keys(this.applicants.terms);\n      for (let term of sTerms) {\n        if ( Array.isArray( this.applicants.terms[term] ) ) {\n          if ( this.applicants.terms[term].length > 0 ) {\n            url += \"&\" + term + \"=\" + this.applicants.terms[term].join(',')\n          }\n        } else if ( this.applicants.terms[term] ) {\n          url += \"&\" + term + \"=\" + this.applicants.terms[term];\n        }\n      }\n      this.applicants.prevPage = this.applicants.options.page;\n      fetch(url).then(response => {\n        response.json().then(async (data) => {\n          this.applicants.results = [];\n          if (data.total > 0) {\n            this.applicants.link = data.link;\n            for (let entry of data.entry) {\n              if(entry.resource.resourceType !== 'Practitioner') {\n                continue\n              }\n              let result = { id: entry.resource.id };\n              result.surname = entry.resource.name[0].family\n              result.given = entry.resource.name[0].given.join(\", \")\n              result.birthDate = entry.resource.birthDate\n              result.gender = entry.resource.gender\n              result.gender = await this.$fhirutils.lookup( result.gender, 'http://hl7.org/fhir/administrative-gender' )\n              result.omang = this.$fhirpath.evaluate( entry.resource, \"Practitioner.identifier.where(type.coding.code='omang').value\" );\n              result.passport = this.$fhirpath.evaluate( entry.resource, \"Practitioner.identifier.where(type.coding.code='passport').value\" );\n              let enrolledExams = data.entry.filter((entry) => {\n                return entry.resource.meta.profile.includes(\"http://ihris.org/fhir/StructureDefinition/kitso-practitioner-exam-profile\") &&\n                entry.resource.extension.find((ext) => {\n                  return ext.url === \"http://ihris.org/fhir/StructureDefinition/ihris-practitioner-reference\" && ext.valueReference.reference === \"Practitioner/\" + result.id\n                })\n              })\n              if(enrolledExams) {\n                let enrolled\n                for(let enrolledExam of enrolledExams) {\n                  enrolled = enrolledExam.resource.extension.find((ext) => {\n                    return ext.url === \"http://ihris.org/fhir/StructureDefinition/kitso-exam-scheduling-reference\" && ext.valueReference.reference === \"Basic/\" + this.queries.exam\n                  })\n                  if(enrolled) {\n                    break\n                  }\n                }\n                if(enrolled) {\n                  continue\n                }\n              }\n              this.applicants.results.push(result);\n            }\n          }\n          this.applicants.total = data.total;\n          this.applicants.loadingApplicants = false;\n          this.checkRerunApplicants()\n        }).catch(err => {\n          this.applicants.loadingApplicants = false;\n          this.applicants.error_message = \"Unable to load results.\";\n          this.checkRerunApplicants()\n          console.log(err);\n        });\n      }).catch(err => {\n        this.applicants.loadingApplicants = false;\n        this.applicants.error_message = \"Unable to load results.\";\n        this.checkRerunApplicants()\n        console.log(err);\n      });\n    },\n    getEnrolled(restart) {\n      this.enrolled.selected = []\n      this.enrolled.dialog = true\n      if ( this.enrolled.loadingEnrolled ) {\n        this.enrolled.update_again.rerun = true\n        this.enrolled.update_again.restart = this.enrolled.update_again.restart || restart\n        return\n      }\n      this.enrolled.loadingEnrolled = true;\n      this.enrolled.error_message = null;\n      let url = \"\";\n      if (restart) this.enrolled.options.page = 1;\n      if (this.enrolled.options.page > 1) {\n        if (this.enrolled.options.page === this.enrolled.prevPage - 1) {\n          url = this.enrolled.link.find(link => link.relation === \"previous\").url;\n        } else if (this.enrolled.options.page === this.enrolled.prevPage + 1) {\n          url = this.enrolled.link.find(link => link.relation === \"next\").url;\n        }\n        // Should make this smarter to keep the _getpages parameter,\n        // but the issue is with tracking permissions on the resource\n        url = url.replace(/_getpages=[^&]*&*/, \"\").replace(\"/fhir?\",\"/fhir/Basic?\")\n        url = url.substring(url.indexOf(\"/fhir/\"));\n\n        //some of the hapi instances requires _total=accurate to always be available for them to return total resources\n        if(url.indexOf('_profile=http://ihris.org/fhir/StructureDefinition/kitso-practitioner-exam-profile') === -1) {\n          url = url + '&_profile=http://ihris.org/fhir/StructureDefinition/kitso-practitioner-exam-profile'\n        }\n        if(url.indexOf('kitsoscheduledexam=Basic/' + this.queries.exam) === -1) {\n          url = url + '&kitsoscheduledexam=Basic/' + this.queries.exam\n        }\n        if(url.indexOf('_include=Basic:practitioner') === -1) {\n          url = url + '&_include=Basic:practitioner'\n        }\n        if(url.indexOf('_sort=-_lastUpdated') === -1) {\n          url = url + '&_sort=-_lastUpdated'\n        }\n        if(url.indexOf('_total=accurate') === -1) {\n          url = url + '&_total=accurate'\n        }\n      }\n      if (url === \"\") {\n        let count = this.enrolled.options.itemsPerPage;\n        let sort = \"\";\n        for (let idx in this.enrolled.options.sortBy) {\n          if (sort) {\n            sort += \",\";\n          }\n          if (this.enrolled.options.sortDesc[idx]) {\n            sort += \"-\";\n          }\n          sort += this.enrolled.options.sortBy[idx];\n        }\n        url =\n          \"/fhir/Basic?_profile=http://ihris.org/fhir/StructureDefinition/kitso-practitioner-exam-profile\" + \n          \"&kitsoscheduledexam=Basic/\" + this.queries.exam + \n          \"&_include=Basic:practitioner\" + \n          \"&_count=\" + count +\n          \"&_sort=-_lastUpdated&_total=accurate\"\n      }\n      let sTerms = Object.keys(this.enrolled.terms);\n      for (let term of sTerms) {\n        if ( Array.isArray( this.enrolled.terms[term] ) ) {\n          if ( this.enrolled.terms[term].length > 0 ) {\n            url += \"&\" + term + \"=\" + this.enrolled.terms[term].join(',')\n          }\n        } else if ( this.enrolled.terms[term] ) {\n          url += \"&\" + term + \"=\" + this.enrolled.terms[term];\n        }\n      }\n\n      this.enrolled.prevPage = this.enrolled.options.page;\n      fetch(url).then(response => {\n        response.json().then(async (data) => {\n          this.enrolled.results = [];\n          if (data.total > 0) {\n            this.enrolled.link = data.link;\n            for (let entry of data.entry) {\n              if(entry.resource.resourceType !== 'Practitioner') {\n                continue\n              }\n              let result = { id: entry.resource.id };\n              result.surname = entry.resource.name[0].family\n              result.given = entry.resource.name[0].given.join(\", \")\n              result.birthDate = entry.resource.birthDate\n              result.gender = entry.resource.gender\n              result.gender = await this.$fhirutils.lookup( result.gender, 'http://hl7.org/fhir/administrative-gender' )\n              result.omang = this.$fhirpath.evaluate( entry.resource, \"Practitioner.identifier.where(type.coding.code='omang').value\" );\n              result.passport = this.$fhirpath.evaluate( entry.resource, \"Practitioner.identifier.where(type.coding.code='passport').value\" );\n              for (let entry of data.entry) {\n                if(!entry.resource.extension) {\n                  continue\n                }\n                let practitioner = entry.resource.extension.find((ext) => {\n                  return ext.url === 'http://ihris.org/fhir/StructureDefinition/ihris-practitioner-reference'\n                })?.valueReference?.reference\n                if('Practitioner/' + result.id !== practitioner) {\n                  continue\n                }\n                if(entry.resource.meta.profile.includes(\"http://ihris.org/fhir/StructureDefinition/kitso-practitioner-exam-profile\")) {\n                  let scoreMark = entry.resource.extension.find((ext) => {\n                    return ext.url === 'http://ihris.org/fhir/StructureDefinition/score-marks'\n                  })?.valueDecimal\n                  let scoreAssessment = entry.resource.extension.find((ext) => {\n                    return ext.url === 'http://ihris.org/fhir/StructureDefinition/score-assessment'\n                  })?.valueCoding?.display\n                  if(scoreAssessment) {\n                    result.score = scoreAssessment\n                  } else if(scoreMark || scoreMark == 0) {\n                    result.score = scoreMark\n                  }\n                  result.examId = entry.resource.id\n                  let assessment = entry.resource.extension.find((ext) => {\n                    return ext.url === 'http://ihris.org/fhir/StructureDefinition/exam-assessment'\n                  })\n                  if(assessment) {\n                    result.assessment = assessment.valueCoding.display\n                  }\n                }\n              }\n              this.enrolled.results.push(result);\n            }\n          }\n          this.enrolled.total = data.total;\n          this.enrolled.loadingEnrolled = false;\n          this.checkRerunEnrolled()\n        }).catch(err => {\n          this.enrolled.loadingEnrolled = false;\n          this.enrolled.error_message = \"Unable to load results.\";\n          this.checkRerunEnrolled()\n          console.log(err);\n        });\n      }).catch(err => {\n        this.enrolled.loadingEnrolled = false;\n        this.enrolled.error_message = \"Unable to load results.\";\n        this.checkRerun()\n        console.log(err);\n      });\n    },\n    hasTask(task) {\n      return this.$store.state.user.obj.permissions && this.$store.state.user.obj.permissions.special && this.$store.state.user.obj.permissions.special.special && this.$store.state.user.obj.permissions.special.special.id && this.$store.state.user.obj.permissions.special.special.id[task] ||\n            this.$store.state.user.obj.permissions && this.$store.state.user.obj.permissions.special && this.$store.state.user.obj.permissions.special.navigation && this.$store.state.user.obj.permissions.special.navigation.id && this.$store.state.user.obj.permissions.special.navigation.id[task]\n\n    }\n  },\n  created() {\n    this.getExam()\n    this.getEnrolled()\n  }\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./kitso-scheduled-exam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./kitso-scheduled-exam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./kitso-scheduled-exam.vue?vue&type=template&id=6388281f&\"\nimport script from \"./kitso-scheduled-exam.vue?vue&type=script&lang=js&\"\nexport * from \"./kitso-scheduled-exam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardSubtitle } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VDatePicker } from 'vuetify/lib/components/VDatePicker';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VOverlay } from 'vuetify/lib/components/VOverlay';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardSubtitle,VCardText,VCardTitle,VCheckbox,VChip,VCol,VContainer,VDataTable,VDatePicker,VDialog,VDivider,VIcon,VMenu,VOverlay,VProgressCircular,VRow,VSpacer,VTextField,VToolbar})\n"],"names":["Selectable","name","props","indeterminate","Boolean","indeterminateIcon","type","String","default","offIcon","onIcon","data","inputIndeterminate","this","computed","classes","VInput","computedIcon","isActive","validationState","isDisabled","hasError","shouldValidate","hasSuccess","hasColor","computedColor","watch","val","$nextTick","$emit","methods","genCheckbox","title","checkboxAttrs","attrs$","$createElement","staticClass","VIcon","setTextColor","dense","dark","light","genInput","toString","genRipple","rippleState","genDefaultSlot","genLabel","mixins","Themeable","extend","inset","render","h","class","themeClasses","attrs","$attrs","on","$listeners","$slots","Vue","directives","ripple","Object","push","value","center","prevent","e","preventDefault","Rippleable","Comparable","model","prop","event","id","inputValue","falseValue","trueValue","multiple","label","lazyValue","color","isDark","appIsDark","isMultiple","Array","isArray","internalValue","input","some","item","valueComparator","undefined","isDirty","click","assign","disabled","computedId","role","domProps","checked","blur","onBlur","change","onChange","focus","onFocus","keydown","onKeydown","ref","onClick","isInteractive","length","filter","validate","isFocused","_vm","_h","_c","_self","overlay","$event","_v","callback","$$v","approveResultsDialog","expression","scopedSlots","_u","key","fn","_g","registrationDateFormatted","registrationDateMenu","formatDate","registrationDate","approveResults","applicants","$set","dialog","buildTerms","clearSearch","search","_s","error_message","_e","selected","staticStyle","headers","results","options","total","$t","loadingApplicants","enroll","canEnroll","getApplicants","canApproveResults","ind","exam","course","startdate","enddate","status","display","hasTask","unenroll","resultsMode","activateAddResults","code","saveResults","deactivateAddResults","enrolled","loadingEnrolled","clickIt","stopPropagation","surname","given","birthDate","gender","omang","passport","cadreCategory","location","_l","assessment","examResults","examId","errors","validateScore","staticRenderFns","itemsPerPage","prevPage","link","terms","text","update_again","rerun","restart","applicantStatus","handler","deep","selectAll","unselectDisabled","method","redirect","body","fetch","catch","path","complete","resourceType","entry","meta","profile","extension","url","valueInteger","valueReference","reference","bundle","resource","request","getExam","response","valueString","valueDate","valueDecimal","checkRerunApplicants","checkRerunEnrolled","getDataPractitioner","identifier","practitioners","resolve","reject","cadres","sort","result","err","console","getEnrolled","count","valueCoding","created","component","VBtn"],"sourceRoot":""}